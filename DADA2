#### Using DADA2 package to analyze EO trial sequence reads

# install Dada 2
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install("dada2", version = "3.15", force = TRUE)
library(dada2); packageVersion("dada2")
library(dplyr); packageVersion("dplyr")
# specify a path for inputting files
path <- "/folder_path"
list.files(path)
# name the forward and reverse files
fnFs <- sort(list.files(path, pattern = "_1.fq.gz", full.names = TRUE))
fnRs <- sort(list.files(path, pattern = "_2.fq.gz", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
head(sample.names)
## quality plot
# forward reads
plotQualityProfile(fnFs[3:6]) 
# reverse reads
plotQualityProfile(fnRs[3:6])
#### filter and trim ####
## place filtered files in filtered subdirectory 
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
filtRs <- file.path(path, "filtered", paste0(sample.names, "_R_filt.fastq.gz"))
names(filtFs) <- sample.names
names(filtRs) <- sample.names
out2 <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(225,220), maxN=0, maxEE=c(2,2), truncQ=2, rm.phix=TRUE, compress=TRUE, multithread=TRUE) # On Windows set multithread=FALSE
head(out2)
#### Learn the Error Rates ####
errF <- learnErrors(filtFs, multithread=TRUE)
errR <- learnErrors(filtRs, multithread=TRUE)
plotErrors(errF, nominalQ=TRUE) 
plotErrors(errR, nominalQ=TRUE)
#### Sample Inference ####
dadaFs <- dada(filtFs, err=errF, multithread=TRUE)
dadaRs <- dada(filtRs, err=errR, multithread=TRUE)
# Inspecting the returned dada-class object:
dadaFs[[1]]
#### Merge paired reads ####
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
#### Construct sequence table ####
seqtab <- makeSequenceTable(mergers)
dim(seqtab)
#### Inspect distribution of sequence lengths ####
table(nchar(getSequences(seqtab)))
# Sequences that are much longer or shorter than expected may be the result of 
# non-specific priming. You can remove non-target-length sequences from your sequence table
seqtab_400 <- seqtab[,nchar(colnames(seqtab)) %in% 400:500]
dim(seqtab_400)
#### Remove chimeras ####
seqtab.nochim_400 <- removeBimeraDenovo(seqtab_400, method="consensus", 
                                        multithread=TRUE, verbose=TRUE)
#### Assign taxonomy ####
taxa_400 <- assignTaxonomy(seqtab.nochim_400,"/Silva_nr99_v138.1_wSpecies_train_set.fa", multithread=TRUE)
#### export tables ####
write.csv(taxa_400, file = "/taxa_table_400.csv")
saveRDS(taxa_400, file = "/taxa_table_400.rds")
write.csv(seqtab.nochim_400, file = "/ASV_table_400.csv")
saveRDS(seqtab.nochim_400, file = "/ASV_table_400.rds")

# end of DADA2
